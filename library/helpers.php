<?php
/**
 * CalPress helpers functions. This page contains MANY various functions with
 * callbacks to streamline development.
 *
 *
 * Copyright (c) 2012 The Regents of the University of California
 * Released under the GPL Version 2 license
 * http://www.opensource.org/licenses/gpl-2.0.php
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * @package WordPress
 * @subpackage CalPress2
 * @since CalPress 0.9.7
 */
if( !function_exists('calpress_filter_wp_title')):
/**
 * Makes some changes to the <title> tag, by filtering the output of wp_title().
 *
 * If we have a site description and we're viewing the home page or a blog posts
 * page (when using a static front page), then we will add the site description.
 *
 * If we're viewing a search result, then we're going to recreate the title entirely.
 * We're going to add page numbers to all titles as well, to the middle of a search
 * result title and the end of all other titles.
 *
 * @since Twenty Ten 1.0
 * @global $paged So we know what page we're on
 * @param string $title Title generated by wp_title()
 * @param string $separator The separator passed to wp_title(). Twenty Ten uses a
 * 	vertical bar, "|", as a separator in header.php.
 * @return string The new title, ready for the <title> tag.
 */
function calpress_filter_wp_title( $title, $separator ) {
	// Don't affect wp_title() calls in feeds.
	if ( is_feed() )
		return $title;

	// The $paged global variable contains the page number of a listing of posts.
	// The $page global variable contains the page number of a single post that is paged.
	// We'll display whichever one applies, if we're not looking at the first page.
	global $paged, $page;

	if ( is_search() ) {
		// If we're a search, let's start over:
		$title = sprintf( __( 'Search results for %s', 'calpress' ), '"' . get_search_query() . '"' );
		// Add a page number if we're on page 2 or more:
		if ( $paged >= 2 )
			$title .= " $separator " . sprintf( __( 'Page %s', 'calpress' ), $paged );
		// Add the site name to the end:
		$title .= " $separator " . get_bloginfo( 'name', 'display' );
		// We're done. Let's send the new title back to wp_title():
		return $title;
	}

	// Otherwise, let's start by adding the site name to the end:
	$title .= get_bloginfo( 'name', 'display' );

	// If we have a site description and we're on the home/front page, add the description:
	$site_description = get_bloginfo( 'description', 'display' );
	if ( $site_description && ( is_home() || is_front_page() ) )
		$title .= " $separator " . $site_description;

	// Add a page number if necessary:
	if ( $paged >= 2 || $page >= 2 )
		$title .= " $separator " . sprintf( __( 'Page %s', 'calpress' ), max( $paged, $page ) );

	// Return the new title to wp_title():
	return $title;
}
endif;
add_filter( 'wp_title', 'calpress_filter_wp_title', 10, 2 );

/**
 * Display lead artwork for a post. Will echo HTML or return data if argument is supplied.
 *
 * @uses calpress_legacy_support()
 * @global obj $calpress_supported_multimedia 
 * @global obj $post
 * @since CalPress 0.9.7
 * @param bool $echo Echo the results, or change to false to retrieve for php.
 * @return bool|string Will return results 
 */
function calpress_lead_art($echo = true){
	global $calpress_supported_multimedia;
	global $post;
	
	$postid = $post->ID; 
	
	$post_custom = get_post_custom($postid);
	
	if(!isset($post_custom['lead_art'])){ //an old post where no lead art was set
		if(calpress_legacy_support()){
			$html = calpress_show_legacy_lead_art();
			if($echo)
				echo $html;
			
			return $html;
		} else {
			return false;
		}
	}
	
	$post_lead_art_key = $post_custom['lead_art'][0];
	$lead_art = $calpress_supported_multimedia->$post_lead_art_key;
	
	if($lead_art['display_function']){
		
		if($lead_art['render_form']){ //if the user had to fill out a form for this lead art
			$html = call_user_func_array($lead_art['display_function'], array($post_custom[$post_custom['lead_art'][0]][0], $postid));
		} else { //lead art is either image or gallery
			$html = call_user_func_array($lead_art['display_function'], array($postid));
		}
		
		if(isset($post_custom['lead_art_caption_'.$post_custom['lead_art'][0]]))
			if($post_custom['lead_art_caption_'.$post_custom['lead_art'][0]])
				$html .= '<div class="wp-caption">'. $post_custom['lead_art_caption_'.$post_custom['lead_art'][0]][0] . '</div>';
	} else {
		return;
	}
	
	if($echo)
		echo $html;
		
	return $html;
}

/**
 * Convenience function that allows you to cycle through
 * an array and trim all items.
 *
 * @example array_walk($array, 'trim_value');
 * @since CalPress 0.9.7
 * @param string $value The item to trim.
 * @return void
 */
function trim_value(&$value) { 
	$value = trim($value); 
}

/**
 * Redirect page or post with a "redirect" extra field to the value of that field
 *
 * @since CalPress 0.7b
 * @param none
 * @return void
 */
function calpress_redirect(){
    global $wp_query, $post;
  
    if (is_single() || is_page()) {
        $redirect = get_post_meta($wp_query->post->ID, 'redirect', true);
        if ($redirect != '')
		{   
			wp_redirect($redirect, '301');
			exit;
		}
    }
}
add_action('template_redirect', 'calpress_redirect');

/**
 * Display lead artwork for a post. Will echo HTML or return data if argument is supplied.
 *
 * @since CalPress 0.9.7
 * @global obj $calpress_supported_multimedia 
 * @param bool $echo Echo the results, or change to false to retrieve for php.
 * @return void|string Will return results if $echo is false 
 */
function calpress_inline_art($echo = true){
	global $calpress_supported_multimedia;
	global $post;
	
	$postid = $post->ID;
	
	$post_custom = get_post_custom($postid);
	
	if(!isset($post_custom['inline_art']) || 
	   !isset($post_custom['inline_art_title']) || 
	   !isset($post_custom['inline_art_caption']) || 
	   !isset($post_custom['inline_art_media'])
	) {
		if(calpress_legacy_support()){
			$html = calpress_show_legacy_inline_art();
			
			if($html){
				$html = '<aside class="entry-inline clearfix">'.PHP_EOL. $html . '</aside>'.PHP_EOL;				
				if($echo)
					echo $html;
				return $html;
			}
			return false;
		} else {
			return false;
		}
	}

	$post_custom['inline_art'] = unserialize($post_custom['inline_art'][0]);
	$post_custom['inline_art_title'] = unserialize($post_custom['inline_art_title'][0]);
	$post_custom['inline_art_caption'] = unserialize($post_custom['inline_art_caption'][0]);
	$post_custom['inline_art_media'] = unserialize($post_custom['inline_art_media'][0]);
		
	$counter = 0;
	$html = '';
	$opentag = '<aside class="entry-inline clearfix">'.PHP_EOL;
		
	foreach($post_custom['inline_art'] as $inline_art):
		if($inline_art != 'none'){
			
			$inline_item = $calpress_supported_multimedia->$inline_art;
			if($inline_item['render_form'] && $inline_item['display_function']){
				
				$html .= call_user_func_array(
					$inline_item['display_function'], 
					array( 
						$post_custom['inline_art_media'][$counter], 
						$postid, 
						$post_custom['inline_art_title'][$counter], 
						$post_custom['inline_art_caption'][$counter],
						true
					));
				
			} elseif (!$inline_item['render_form'] && $inline_item['display_function']){
				
				$html .= call_user_func_array(
					$inline_item['display_function'], 
					array( 
						$postid,
						true
					));
			}
			
		}
		$counter++;
	endforeach;
	
	if($html){
		$html = $opentag . $html . '</aside><!-- .entry-inline -->'.PHP_EOL;

		if($echo)
			echo $html;
		
		return $html;
	}
	
	return false;
}


/**
 * Adds any scripts from post_meta that need to be called before wp_head.
 * This cycles through all post meta custom fields to check if they have
 * associations with 'support_scripts' functions, and calls those functions
 *
 * @see calpress_add_media_support()
 * @uses get_post_custom()
 * @global obj $calpress_supported_multimedia
 * @global obj $wp_query
 * @since CalPress 0.9.7
 * @return void 
 */
function calpress_add_multimedia_scripts(){
	global $wp_query;
	global $calpress_supported_multimedia;
	
	$thePostID = $wp_query->post->ID;
	$post_custom = get_post_custom($thePostID);
		
	foreach($post_custom as $key => $value):
		//for lead_art scripts
		if(is_serialized($value[0]) == false && isset($calpress_supported_multimedia->$value[0])){
			$post_meta = $calpress_supported_multimedia->$value[0];
			if($post_meta['support_scripts'])
				call_user_func($post_meta['support_scripts'], $value[0]);
		}
		//for advanced scripts like extracss
		if(is_serialized($value[0]) == false && isset($calpress_supported_multimedia->$key)){
			$post_meta = $calpress_supported_multimedia->$key;
			if($post_meta['support_scripts'])
				call_user_func($post_meta['support_scripts'], $value[0]);			
		}
		//for inline scripts
		if(is_serialized($value[0])):
			$arrayval = unserialize($value[0]);
			foreach($arrayval as $array):
				if(is_array($array)) $array = implode($array);
				if(isset($calpress_supported_multimedia->$array)){
					$post_meta = $calpress_supported_multimedia->$array;
					if($post_meta['support_scripts'])
						call_user_func($post_meta['support_scripts']);
				}
			endforeach;
		endif;
		//for legacy support
		if(function_exists('calpress_legacy_support') && calpress_legacy_support()){
			if($key == 'extra_css'){
				foreach($value as $val):
					add_action('wp_head', create_function('', 'echo \'<link rel="stylesheet" href="' . $val .'" />\'.PHP_EOL; return;'));
				endforeach;
			}
			if($key == 'extra_js'){
				foreach($value as $val):
					add_action('wp_head', create_function('', 'echo \'<script type="text/javascript" src="' . $val .'" charset="utf-8"></script>\'.PHP_EOL; return;'));
				endforeach;
			}
			if(is_page())
				add_action('wp_enqueue_scripts', create_function('', 'wp_enqueue_style("calpress_960"); return;'));
		}
	endforeach;
	
	//add open graph protocols if the sfc plugin is installed
	if(isset($post_custom['lead_art']) && ($post_custom['lead_art'][0] == 'youtube' || $post_custom['lead_art'][0] == 'vimeo')):
		if(function_exists('sfc_media_find_video')){
			function calpress_add_meta($og){
				global $wp_query;
				global $calpress_supported_multimedia;

				$thePostID = $wp_query->post->ID;
				$post_custom = get_post_custom($thePostID);
				
				$tempmedia = $calpress_supported_multimedia->$post_custom['lead_art'][0];
				$vids = sfc_media_find_video($wp_query->post, call_user_func($tempmedia['display_function'], $post_custom[$post_custom['lead_art'][0]][0]));
				return array_merge($og, $vids);
			}
			add_filter('sfc_base_meta', 'calpress_add_meta', 11);
		}
	endif;
	
	return;
}

/**
 * Add open graph meta tags to head when not using SFC plugin
 *
 * @todo Will add open graph meta tags to head when not using SFC plugin
 * @uses language_attributes filter
 * @global obj $wp_query
 * @since CalPress 0.9.7
 * @param string $output Current language attributes
 * @return string HTML attributes with open graph appended
 */
function calpress_story_meta_data_header($media){
	global $wp_query;
	
	if(!function_exists('sfc_base_meta')):
		//store post excerpt if it exists, or make one from content
		$the_excerpt = ($wp_query->post->post_excerpt ? 
			substr($wp_query->post->post_excerpt, 0, 199) : 
			substr($wp_query->post->post_content, 0, 199)
		);
	
		$post_thumbnail = has_post_thumbnail() ? wp_get_attachment_image_src(get_post_thumbnail_id(), 'full'): '';
			
		echo '<meta property="og:type" content="article"/>'.PHP_EOL;
		echo '<meta property="og:url" content="' . get_permalink() . '"/>'.PHP_EOL;
		echo '<meta property="og:title" content="' . get_the_title() .'"/>'.PHP_EOL;
		echo '<meta property="og:description" content="' . $the_excerpt . '"/>'.PHP_EOL;
	
		if($post_thumbnail):
			echo '<meta property="og:image" content="' . $post_thumbnail[0] .'"/>'.PHP_EOL;
		endif;
	
		//<meta property="og:video" content="http://www.youtube.com/v/k86xpd26M2g?version=3&amp;autohide=1">
	    //<meta property="og:video:type" content="application/x-shockwave-flash">
	    //<meta property="og:video:width" content="398">
	    //<meta property="og:video:height" content="224">
	endif;
}

/**
 * Adds some twitter open graph tags to the head
 *
 * @uses wp_head
 * @global obj $wp_query
 * @since CalPress 0.9.7
 * @return void
 */
function calpress_website_meta_data_header(){
	global $wp_query;
	$options = unserialize(CALPRESSTHEMEOPTIONS);
	if($options['twitter_handle']):
		echo '<meta name="twitter:card" value="summary"/>'.PHP_EOL;
		echo '<meta name="twitter:site" value="@' . $options['twitter_handle'] . '"/>'.PHP_EOL;
		if(is_single() && $twitter_author = get_the_author_meta('twitter', $wp_query->post->post_author)):
			echo '<meta name="twitter:creator" value="@' . $twitter_author . '"/>'.PHP_EOL;
		endif;
	endif;
}
add_action('wp_head', 'calpress_website_meta_data_header');

/**
 * Adds open graph attribute to html tag.
 *
 * @uses language_attributes filter
 * @since CalPress 0.9.7
 * @param string $output Current language attributes
 * @return string HTML attributes with open graph appended
 */
function calpress_add_open_graph_to_html_tag($output){
	//don't use open graph if we are using the sfc plugin
	if(!function_exists('sfc_channel_file'))
		$output = $output . ' prefix="og: http://ogp.me/ns#"';
	return $output;
}
add_filter('language_attributes', 'calpress_add_open_graph_to_html_tag');

/**
 * Checks if user wants to show sidebar on single.php
 *
 * @since CalPress 0.9.7
 * @global obj $wp_query
 * @param int $post_id Optionally provide the id of the post
 * @return bool True if we should show sidebar, false if not 
 */
function calpress_show_sidebar($post_id=''){
	global $wp_query;
	$sidebar = true;
	
	$post_id = $post_id ? (int) $post_id : $wp_query->post->ID;
	$post_custom = get_post_custom($post_id);
	if(isset($post_custom['sidebar']))
		$sidebar = $post_custom['sidebar'][0] == 'false' ? false : true;
		
	return $sidebar;
}

/**
 * Returns bool depending on whether user wants to show author profile
 * below posts they write
 *
 * @see theme-options.php
 * @since CalPress 0.9.7
 * @return bool True if user wants to show author profiles
 */
function calpress_show_author_profile_on_posts(){
	$options = unserialize(CALPRESSTHEMEOPTIONS);
	
	return ($options['show_author_profile_on_posts'] == "true" ? true : false);
}

/**
 * Echo's HTML5 <time> of when item was posted. Will use post's time, or a
 * timestamp can be provided.
 *
 * @since CalPress 0.9.7
 * @param $timestamp Unix timestamp of the post. Defaults to the_time('U')
 * @param $limit No longer used.
 * @return void 
 */
function calpress_posted_on($timestamp=null, $limit=86400, $echo="true"){
	if($timestamp){
		$dateformat = get_option('date_format');
		$timeformat = get_option('time_format');
		$datetime = date(DATE_W3C, $timestamp);
		$thedate = date($dateformat, $timestamp);
		$thetime = date($timeformat, $timestamp);
	} else {
		$datetime = get_the_time(DATE_W3C);
		$thedate = get_the_date();
		$thetime = get_the_time();
	}
	
	$html = '<time pubdate class="date updated" datetime="'. $datetime . '">' . $thedate . ' ' . $thetime . '</time>';
	
	if($echo)
		echo $html;
	
	return $html;
}

/**
 * Returns the category name for posts that should end up on the front page.
 * User sets this in theme options in the admin.
 *
 * @since CalPress 0.9.7
 * @return int|bool The category ID for front page posts, or false if blank
 */
function get_calpress_front_page_category(){
	$options = unserialize(CALPRESSTHEMEOPTIONS);
	if(is_numeric($options['front_category'])){
		return $options['front_category'];
	}
	return false;
}

/**
 * Returns the category name for posts that should be featured above the fold.
 * User sets this in theme options in the admin.
 *
 * @since CalPress 0.9.7
 * @return int|bool The category ID for featured articles, or false if blank
 */
function get_calpress_featured_category(){
	$options = unserialize(CALPRESSTHEMEOPTIONS);
	if(is_numeric($options['featured_category'])){
		return $options['featured_category'];
	}
	return false;
}

/**
 * Returns the name of the front page layout if the loop-{layout}.php file exists
 * User sets this in theme options in the admin.
 *
 * @since CalPress 0.9.7
 * @return string The name of the front page layout, or 'index' if it doesn't find the file.
 */
function calpress_get_featured_post_format($classes=''){
	$options = get_option('calpress_theme_options');
	if($classes) $classes = $classes . ' ';
	
	if($options['front_page_layout'] != 'index')
		return $classes . $options['front_page_layout'];
		
	return $classes . 'index';
}

//put featured format as a body class
add_filter('calpress_filter_bodyclass', 'calpress_get_featured_post_format', 10);

/**
 * Enqueues scripts needed for the carousel.
 *
 * @todo Make a dynamic mechanism for enqueueing scripts.
 * @since CalPress 0.9.7
 * @return void
 */
function calpress_add_carousel_script(){
	if(calpress_get_featured_post_format() == 'carousel')
		wp_enqueue_script('iosslider');
}
add_action('wp_enqueue_scripts', 'calpress_add_carousel_script', 5);


/**
 * Convenience function that returns the category blocks chosen by the 
 * user in theme options.
 *
 * @since CalPress 0.9.7
 * @return array The ids of all the categories chosen in theme options
 */
function calpress_get_chosen_category_blocks(){
	$options = get_option('calpress_theme_options');
	
	if(!empty($options['category_block']))
		return (array) $options['category_block'];
	
	return array();
}

/**
 * Returns the omitted categories, that shouldn't appear in category blocks
 *
 * @since CalPress 0.9.7
 * @return array The category ids chosen in theme options
 */
function calpress_get_omit_category_blocks(){
	$options = get_option('calpress_theme_options');
	$omitted_categories = explode(',', $options['omit_category_block']);
	
	if(!empty($omitted_categories))
		return (array) $omitted_categories;
	
	return array();
}

/**
 * Convenience function that returns the category metadata.
 *
 * @since CalPress 0.9.7
 * @param int $id The category ID to return meta data
 * @param string $key The metadata key to return. If omitted, returns an array of all meta data.
 * @return mixed Depending on if a $key provided, will return that piece of meta data. False if none.
 */
function calpress_get_category_meta($id, $key=''){
	$options = unserialize(CALPRESSCATEGORYMETA);
	
	if(isset($options[$id][$key]))
		return $options[$id][$key];

	if(isset($options[$id]))
		return (array) $options[$id];
		
	return false;
}

/**
 * If front page, adds "front" to the body class
 *
 * @since CalPress 0.9.7
 * @return string 
 */
function calpress_add_front_body_class($classes){
	if(is_front_page() && !is_paged())
		$classes = $classes . ' front';
		
	return $classes;
}
add_filter('calpress_filter_bodyclass', 'calpress_add_front_body_class', 10);

/**
 * Scans the theme directory (child theme too) for any featured-{layout}.php files and returns
 * an array of names. These will be used in theme options for allowing the user to select
 * which featured post format to use for the front page.
 *
 * If Featured Template string is in the comment block of the file, it will use that name
 * for the human readable selection, otherwise it will default to the slug.
 *
 * @since CalPress 0.9.7
 * @return array Associative array of each featured-{layout} file found, keys are the slug name and values are human readable.
 */
function calpress_return_all_featured_post_formats(){
	$theme_featured_templates = scandir(CHILDTHEMEFULLPATH);
	$found_featured_templates['default'] = 'Standard';
	$template_names = array();
	//$options = get_option('calpress_theme_options');
	if(!$theme_featured_templates)
		return (array) $found_theme_loops;
	
	foreach($theme_featured_templates as $theme_featured_template)
		if(preg_match('/^featured-(.*?)\./', $theme_featured_template, $featured_match) && !is_dir($theme_featured_template)){
			$template_file_data = implode( '', file(CHILDTHEMEFULLPATH . "/" . $theme_featured_template));
			if ( preg_match( '|Featured Name:(.*)$|mi', $template_file_data, $name )):
				$found_featured_templates[substr($featured_match[0], 9, strlen($featured_match[0]) - 10)] = trim(preg_replace("/\s*(?:\*\/|\?>).*/", '', $name[1]));
			else:
				$found_featured_templates[substr($featured_match[0], 9, strlen($featured_match[0]) - 10)] = ucwords(substr($featured_match[0], 5, strlen($featured_match[0]) - 6));
			endif;
		}

	return (array) $found_featured_templates;
}

/**
 * Returns query string to use with WP_Query that contains categories for
 * front and/or featured as set by the user in theme_options.
 *
 * @since CalPress 0.9.7
 * @param bool $front Include the front category in query?
 * @param bool $featured Include the featured category in query?
 * @param int|bool $postsperpage Optionally include a limit on the query to return
 * @param int|bool $offset Specify number of posts to skip over
 * @return array The query string. Defaults to all articles if not set.
 */
function get_query_arguments_for_front_featured($front=true, $featured=true, $postsperpage=false, $offset=false){
	$query_args = array('post_status' => 'publish', 'paged' => get_query_var('paged'));
	
	if($offset)
		$query_args['offset'] = (int) $offset;
	
	if($postsperpage)
		$query_args['posts_per_page'] = $postsperpage;

	if(get_calpress_featured_category() && get_calpress_front_page_category() && $featured && $front)
		$query_args['category__and'] = array(get_calpress_featured_category(), get_calpress_front_page_category());

	if(get_calpress_front_page_category() && $front && !$featured){
		$query_args['category__in'] = get_calpress_front_page_category();
	} 
	
	if(get_calpress_featured_category() && (!get_calpress_front_page_category() || !$front))
		$query_args['category__in'] = get_calpress_featured_category();
	
	return $query_args;
}

/**
 * Calculates how many posts we need for the WP_Query in loop-front.php in order
 * to have even columns.
 *
 * @since CalPress 0.9.7
 * @global obj $wp_query
 * @param int $num_of_featured Number of posts in featured spot.
 * @return int Number of posts we should query to have even columns.
 */
function calpress_num_posts_for_front_loop($num_of_featured){
	global $wp_query;
		
	$num_items_over = ($wp_query->post_count - $num_of_featured) % 3;// 1, 2 or 0 widows
	$needed = 3 - $num_items_over;
	$total = $wp_query->post_count + $needed;	
	
	return $total;
}

/**
 * Uses multiple authors byline if the Co-Authors Plus plugin is installed.
 * 
 * See http://wordpress.org/extend/plugins/co-authors-plus/
 * 
 * @uses coauthors()
 * @since CalPress 0.9.7
 * @param bool $link Should we include a link with each author?
 * @param string $between The character between author names, defaults to ","
 * @param string $betweenLast The character between the last two author names, defaults to " and "
 * @param string $before Any HTML you want before the authors, defaults to "By "
 * @param string $after Any HTML you want after the authors, defaulst to ""
 * @return void
 */
function calpress_co_authors($link=true, $between=", ", $betweenLast=" and ", $before="By ", $after=""){
	global $authordata;
	$options = unserialize(CALPRESSTHEMEOPTIONS);
	
	//Old CalPress used byline in the custom field
 	if($options['legacy_calpress'] == "true" && get_post_custom_values('byline')){	//support older version of calpress bylines
		$bylines = get_post_custom_values('byline');
		$byline = $before;
		foreach($bylines as $key => $value){
			if($key == count($bylines)-1 && count($bylines) > 1){
				$byline .= $betweenLast . $value;
			} elseif($key == count($bylines)-2 && count($bylines) > 1) {
				$byline .= $value;
			} else {
				$byline .= $value . $between;
			}
		}

		echo '<span class="fn">' . $byline . $after . '</span>';

	} elseif(function_exists('coauthors')){	//use co-authors plus plugin if present
			echo '<span class="fn">';
			if($link)
				coauthors_posts_links($between, $betweenLast, $before, $after);
			if(!$link)
				coauthors($between, $betweenLast, $before, $after);
			echo '</span>';
	} else {	//just show the author name
		if($link)
			echo '<span class="fn"><a href="' . $authordata->user_url .'" title="Link to posts by '. $authordata->display_name .'">' . $before . $authordata->display_name . $after . '</a></span>';
		if(!$link)
			echo '<span class="fn">' . $before . $authordata->display_name . $after . '</span>';
	}
}

/**
 * Adds a big news callout to the top of the front page.
 *
 * @uses calpress_hook_top_content_div hook
 * @since CalPress 0.9.7
 * @return void
 */
function calpress_add_big_news_to_front(){
	$options = unserialize(CALPRESSTHEMEOPTIONS);
	$html = '';
		
	if($options['big_news'][0] && $options['big_news'][1]){
		
		$html .= '
	<article id="big-news" class="clearfix table">
		<div class="tablerow">
			<h3 id="big-news-topic" class="tablecell">' . $options['big_news'][0] . '</h3>
			<header class="tablecell">
				<hgroup>
					<h1 id="big-news-headline">' . ($options['big_news'][2] ? '<a href="' . $options['big_news'][2].'">' : '') . $options['big_news'][1] . ($options['big_news'][2] ? '</a>': '') . ' </h1>
					' . ($options['big_news'][3] ? '<h2>' . $options['big_news'][3] . '</h2>' : '') . '
				</hgroup>
			</header>
		</div>
	</article>	
		';
		if(!is_paged())
			echo $html;
	}
}
add_action('calpress_hook_top_content_div', 'calpress_add_big_news_to_front');


/**
 * Adds a special project posts to front page
 *
 * @uses calpress_hook_loopcontent_below hook
 * @since CalPress 0.9.7
 * @return void
 */
function calpress_add_special_projects(){
	global $post;
	$options = unserialize(CALPRESSTHEMEOPTIONS);

	//get post ids from theme options and store in arrays
	foreach($options['featured_stories'] as $key => $value):
		if(!empty($value[1]) && is_numeric($value[1])):
			$terms[] = $value[1];
			$slugs[$value[1]] = $value[0];
		endif;
	endforeach;
	
	if(empty($terms))
		return false;
	
	//query a new loop
	$args = array(
		'post_type' => 'any',
		'orderby' => 'none',
		'post_status' => 'publish',
		'post__in' => $terms
	);

	$counter = 0;
	wp_reset_postdata();
	$the_query = new WP_Query($args);
	
	//store loop items in an array with the post id as index
	while($the_query->have_posts()): $the_query->the_post();
	
		$html[$post->ID] = '<section id="featured-projects" class="category-block clearfix">'.PHP_EOL;
		$html[$post->ID] .= '	<header>'.PHP_EOL;
		$html[$post->ID] .=  (!empty($slugs[$post->ID]) ? '<h2>'. $slugs[$post->ID] . '</h2>': '<h2>'. __('Featured Project', 'CalPress') . '</h2>').PHP_EOL;
		$html[$post->ID] .= '	</header>'.PHP_EOL;
		$html[$post->ID] .= '	<div class="category-block-content">'.PHP_EOL;
		$html[$post->ID] .= '	<article class="special-projects-post clearfix">'.PHP_EOL;
		if(has_post_thumbnail()):
			$html[$post->ID] .= '<a href="'.get_permalink().'" title="'.sprintf(esc_attr__( 'Permalink to %s', 'calpress' ), the_title_attribute( 'echo=0' )).'">';
			$html[$post->ID] .= calpress_get_featured_image_from_post($post->ID, 'front-featured');
			$html[$post->ID] .= '</a>'.PHP_EOL;
		endif;
		$html[$post->ID] .= ' <header class="hentry">'.PHP_EOL;
		$html[$post->ID] .= '  <h1 class="entry-title">'.PHP_EOL;
		$html[$post->ID] .= '		<a href="'.get_permalink().'" title="'.sprintf(esc_attr__( 'Permalink to %s', 'calpress' ), the_title_attribute( 'echo=0' )).'">'.get_the_title().'</a>'.PHP_EOL;
		$html[$post->ID] .= '	</h1>'.PHP_EOL;
		$html[$post->ID] .= ' </header>'.PHP_EOL;
		$html[$post->ID] .= '	<div class="entry-meta author vcard">'.PHP_EOL;
		$html[$post->ID] .= '		<span class="fn">'.PHP_EOL;
		ob_start();
		calpress_co_authors(true);
		$html[$post->ID] .= ob_get_contents();
		ob_end_clean();
		$html[$post->ID] .= '		</span>'.' | '.PHP_EOL;
		$html[$post->ID] .= '		<span class="time date updated">'. calpress_posted_on('', '', false) . '</span>'.PHP_EOL;
		$html[$post->ID] .= '	</div>'.PHP_EOL;
		$html[$post->ID] .= '	<div class="entry-content">'.PHP_EOL; 
		$html[$post->ID] .= '		' . wp_trim_words(get_the_excerpt(), 30, '...').PHP_EOL;
		$html[$post->ID] .= '	</div>';
		$html[$post->ID] .= '	</article>'.PHP_EOL;
		$html[$post->ID] .= '	</div>'.PHP_EOL;
		$html[$post->ID] .= '</section>'.PHP_EOL;
		$counter++;
	endwhile;
	
	//we do it this way so the user can choose the order the posts are displayed
	foreach($terms as $key => $value):
		echo $html[$value];
	endforeach;
	
}
add_action('calpress_hook_below_category_blocks', 'calpress_add_special_projects');

/**
 * Adds a css class to parent menu items that are more than one level deep. This
 * allows us to show a visual indicator that there are additional sub-menus.
 * 
 * Code modified from: http://codex.wordpress.org/Function_Reference/wp_nav_menu
 *
 * @uses wp_nav_menu_objects filter
 * @since CalPress 0.9.7
 * @return array
 */
function calpress_add_parent_nav_menu_class($items) {
    $hasSub = function ($menu_item_id, &$items) {
        foreach ($items as $item) {
            if ($item->menu_item_parent && $item->menu_item_parent==$menu_item_id) {
                return true;
            }
        }
        return false;
    };

    foreach ($items as &$item) {
        if ($hasSub($item->ID, &$items)) {
            $item->classes[] = 'menu-parent-item';
        }
    }
    return $items;    
}
add_filter('wp_nav_menu_objects', 'calpress_add_parent_nav_menu_class');


/**
 * Adds a search widget to the top of the site nav bar 
 *
 * @uses the_widget()
 * @since CalPress 0.9.7
 * @return void
 */
function calpress_add_search_widget_top_bar(){
	the_widget('WP_Widget_Search'); 
}
//add_action('calpress_hook_above_banner', 'calpress_add_search_widget_top_bar');


/**
 * Optionally adds a login link to the top-of-the-page menu bar. 
 *
 * @uses wp_loginout()
 * @since CalPress 0.9.7
 * @param bool $login (optional) If true, displays a login link as last item
 * @return array Arguments for wp_nav_menu
 */
function calpress_top_nav_menu_login_link($login=true){
	$arguments = array( 
		'container'=>'div', 
		'container_id' => 'top-menu-bar', 
		'fallback_cb'=> false, 
		'theme_location' => 'top_bar', 
		'depth'=> 1,
	);
	
	if($login)
		$arguments['items_wrap'] = '<ul id="%1$s" class="%2$s">%3$s<li class="menu-item menu-item-type-post_type menu-item-object-page">' . wp_register('','', false) . '</li></ul>';
	
	return $arguments;
}

/**
 * Adds a "section" list item to nav menu for responsive designs. It is
 * hidden by default, but will display using javascript and media queries.
 *
 * For responsively designed websites, this function optionally adds a 
 * "section" element to the primary nav bar that will be hidden. Using 
 * CSS media queries, reveal this item and use it to display collapsible
 * nav list for mobile phones.
 *
 * @since CalPress 0.9.7
 * @param bool $login (optional) If true, displays a login link as last item
 * @return array Arguments for wp_nav_menu
 */
function calpress_primary_navigational_menu_arguments($responsive=true){
	$arguments = array( 
		'container'=> false, 
		'fallback_cb'=>'calpress_default_menu', 
		'theme_location' => 'primary', 
		'depth'=>3
	);//table
	
	if($responsive)
		$arguments['items_wrap'] = '<div id="toggle-nav-menu" style="display:none;"><a>Sections</a></div><ul id="%1$s" class="%2$s">%3$s</ul>';
	
	return $arguments;
}

/**
 * Adds some text to the Colophon at the bottom of the page.
 *
 * @todo Make this settable in Theme Options.
 * @since CalPress 0.9.7
 * @return void
 */
function calpress_add_colophon(){
	echo '<p><span>Copyright ' . date('Y') . ', ' . get_bloginfo('name') . ' | ' . 'Powered by WordPress and the CalPress theme. | ';
	echo wp_register('', '', false) . ' | ' . wp_loginout('', false) . '</span></p>';
}
add_action('calpress_hook_colophon', 'calpress_add_colophon');

/**
 * Adds a ie stylesheet to head. 
 *
 * We don't use wp_enqueue_script because it doesn't allow conditional tags (yet)
 *
 * @uses wp_head hook
 * @since CalPress 0.9.7
 * @return void
 */
function calpress_add_ie_stylesheet_to_head(){
	echo '<!--[if IE]>
<script type="text/javascript" charset="utf-8" src="'. THEMEJS . '/ie.js"></script>
<![endif]-->
';
}
add_action('wp_head', 'calpress_add_ie_stylesheet_to_head', 10);

/**
 * Change the default contact methods for site authors
 *
 * Add twitter, phone and title. Drop aim, yim and jabber.
 * Based on: http://sillybean.net/wordpress/users-and-roles/creating-a-user-directory-part-1-changing-user-contact-fields/ 
 *
 * @since CalPress 0.7b
 * @return string
 */
function change_contactmethod( $contactmethods ) {
  // Add some fields
  $contactmethods['title'] = 'Title';
  $contactmethods['org'] = 'Organization';
  $contactmethods['twitter'] = 'Twitter Name (no @)';
  $contactmethods['phone'] = 'Phone Number';
  
  // Remove AIM, Yahoo IM, Google Talk/Jabber
  unset($contactmethods['aim']);
  unset($contactmethods['yim']);
  unset($contactmethods['jabber']);
  // make it go!
  return $contactmethods;
}
add_filter('user_contactmethods','change_contactmethod',10,1);


/**
 * Remove WordPress generator code showing up in the <head> for security reasons.
 *
 * Some malware/hackers target outdated versions of WordPress. This hides the version from the public.
 *
 * @since Twenty Ten 1.0
 * @return string Empty string.
 */
function calpress_complete_version_removal() {
	return '';
}
add_filter('the_generator', 'calpress_complete_version_removal');

/**
 * Test function to see if WordPress is a certain version or later
 *
 * @since CalPress 0.9.7
 * @param string $is_ver Version to test against.
 * @return bool True if the version is later than argument submitted.
 */
function is_wp_version( $is_ver ) {
    $wp_ver = explode( '.', get_bloginfo( 'version' ) );
    $is_ver = explode( '.', $is_ver );
    for( $i=0; $i<=count( $is_ver ); $i++ )
        if( !isset( $wp_ver[$i] ) ) array_push( $wp_ver, 0 );
 
    foreach( $is_ver as $i => $is_val )
        if( $wp_ver[$i] < $is_val ) return false;
    return true;
}

/**
 * Returns the category slug from its ID.
 *
 * @since CalPress 0.9.7
 * @param int $cat_id The category ID.
 * @return string The corresponding category slug.
 */
function calpress_get_cat_slug_from_ID($cat_id) {
	$cat_id = (int) $cat_id;
	$category = &get_category($cat_id);
	return $category->slug;
}

/**
 * Add Google Analytics code to head.
 *
 * If Google Analytics ID is set in theme options, will echo asynchronous 
 * analytics snippet in the document head of all pages. Will not display 
 * Google Analytics tracking code for users who are logged in the site.
 *
 * @return void
 */
function calpress_googleanalytics() {
    // get value from admin
    $get_gaID = unserialize(CALPRESSTHEMEOPTIONS);
	$gaID = $get_gaID['google_analytics'];
    
    // see if its value is not blank
    if ($gaID != "" && !current_user_can('edit_published_posts')){
	$gacode = '<!-- GOOGLE ANALYTICS TRACKING CODE -->
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push([\'_setAccount\', \''. $gaID . '\']);
	_gaq.push([\'_trackPageview\']);

	(function() {
	var ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;
	ga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';
	var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>'."\n";
        echo $gacode;
    }
}
add_action('wp_head', 'calpress_googleanalytics');

/**
 * Add Extra CSS to head of document (set in theme options). Remove carriage returns.
 *
 * @since CalPress 0.9.7
 */
function calpress_head_extra_css() {
	$options = unserialize(CALPRESSTHEMEOPTIONS);
	if($options['extra_css_head'] != ""){
		$output = str_replace(array("\r\n", "\r"), "\n", $options['extra_css_head']);
		$lines = explode("\n", $output);
		$new_lines = array();

		foreach ($lines as $i => $line) {
		    if(!empty($line))
		        $new_lines[] = trim($line);
		}
		echo '<!-- Custom user styles set in theme options -->' . "\n";
		echo '<style type="text/css">' . implode($new_lines) . '</style>' . "\n";
	}
}
add_action( 'wp_head', 'calpress_head_extra_css');

/**
 * Add Extra JavaScript to head of document (set in theme options).
 *
 * @since CalPress 0.9.7
 */
function calpress_head_extra_javascript() {
	$options =  unserialize(CALPRESSTHEMEOPTIONS);
	if($options['extra_js_head'] != ""){
		echo '<!-- Custom user javascript set in theme options -->' . "\n";
		echo $options['extra_js_head'] . "\n";
	}
}
add_action( 'wp_head', 'calpress_head_extra_javascript');


/**
 * Includes the header image of h1 if it exists and is set in the theme options.
 *
 * @since CalPress 0.9.7
 * @return void
 */
function calpress_header_image(){

	// Check to see if the header image has been removed	
	if ($header_image = get_header_image()) : ?>
		<a href="<?php echo home_url('/'); ?>" title="<?php echo esc_attr(get_bloginfo('name', 'display')); ?>" rel="home">
			<img src="<?php header_image(); ?>" alt="<?php bloginfo('name'); ?>" />
		</a>
		<h1 style="display:none;"><?php bloginfo('name'); ?></h1>
		<p style="display:none;"><?php bloginfo('description'); ?></p>
	<?php else: ?>
		<h1><a href="<?php echo home_url('/'); ?>" title="<?php echo esc_attr(get_bloginfo('name', 'display')); ?>" rel="home"><?php bloginfo('name'); ?></a></h1>
		<p><?php bloginfo('description'); ?></p>
	<?php endif;
}

/**
 * Adds a full RSS feed at ?feed=full that you can give to folks who might need it. 
 *
 * @since CalPress 0.9.7
 * @return void
 */
function calpress_add_hidden_full_rss_feed(){
	load_template( TEMPLATEPATH . '/feed-rss2-full.php'); // You'll create a your-custom-feed.php file in your theme's directory
}
add_action('do_feed_full', 'calpress_add_hidden_full_rss_feed', 10, 1);

/**
 * Adds share code that was set in theme-options to the post-meta hook.
 *
 * @uses calpress_hook_single_entry_meta hook
 * @since CalPress 0.9.7
 * @return void
 */
function calpress_add_share_embed_code_to_post(){
	$options = unserialize(CALPRESSTHEMEOPTIONS); 
	if(!empty($options['share_code']))
		echo $options['share_code'];
	
	//add facebook like button option when using SFC plugin
	if(function_exists('sfc_like_button')):
		echo '<div style="margin:0 1px; width:90px; text-align:center; padding:0 1px; overflow:hidden;">'.PHP_EOL;
		sfc_like_button(array('width'=>'90', 'showfaces'=>'false', 'layout'=>'button_count', 'height'=>'20'));
		echo '</div>'.PHP_EOL;
	endif;
}
add_action('calpress_hook_single_entry_meta', 'calpress_add_share_embed_code_to_post');


/**
 * Remove the "Insert Image into Post" option
 *
 * @since CalPress 0.9.7
 * @param array $vars The variables for inserting media
 * @return void
 */
function calpress_allow_insert_image_into_post($vars) {
	$options = unserialize(CALPRESSTHEMEOPTIONS);
	
	$vars["send"] = ($options['insert_image_into_post'] == "true" ? false : true);

	return $vars;
}
add_filter('get_media_item_args', 'calpress_allow_insert_image_into_post');

/**
 * Default menu that will show in the primary spot if there are no menus
 * selected.
 *
 * @since CalPress 0.9.7
 * @return void
 */
function calpress_default_menu($args){ ?>
	<a href="/">Home</a>
<?php	
}

/**
 * Convenience function of whether to show comment count
 * on front page. Defaults to false.
 *
 * @since CalPress 0.9.7
 * @return bool True if we should show comment count, false if not.
 */
function calpress_show_comment_count(){
	$options =  unserialize(CALPRESSTHEMEOPTIONS);
	$comment_count = ($options['comment_count'] == "true" ?  true : false);
	
	return (bool) $comment_count;
}

/**
 * Limits the number of words to return for the excerpt.
 * We override this manually in most of the templates by 
 * using wp_trim_words(), but sometimes we need more words, 
 * and the WordPress default is 55. This increases the default.
 *
 * @since CalPress 0.9.7
 * @return int Number of words for excerpt
 */
function calpress_custom_excerpt_length( $length ) {
	return 70;
}
add_filter( 'excerpt_length', 'calpress_custom_excerpt_length', 999 );

/**
 * New excerpt "more" string on excerpt based on user's settings in theme options
 *
 * @since CalPress 0.9.7
 * @return string The text to display when cut-off
 */
function calpress_new_excerpt_more( $more=NULL ) {
	$options =  unserialize(CALPRESSTHEMEOPTIONS);
	return esc_attr($options['more_text']);
}
add_filter('excerpt_more', 'calpress_new_excerpt_more');


/**
 * Displays the number of MySQL queries at bottom of document if user is logged in.
 *
 * @since CalPress 0.9.7
 */
function calpress_display_num_queries(){
	if(is_user_logged_in()){
		echo '<!-- ' . get_num_queries() . ' queries in ' . timer_stop(0) . ' seconds. -->'.PHP_EOL;
	}
}
add_action('wp_footer', 'calpress_display_num_queries');

/**
 * Convenience function to be used in loops. It will calculate the first, 
 * middle and last elements in a row, and return respective classnames.
 *
 * @since CalPress 0.9.7
 * @param int $counter Pass in the iterator of the loop (make sure it starts on zero!)
 * @param int $num_in_row How many elements per row?
 * @param string $class_prefix Optionally pass in a prefix for each classname. Defaults to 'row'.
 * @return string The class name with prefix attached.
 */
function calpress_calculate_row_classes($counter, $num_in_row, $class_prefix='row'){
	if($counter % $num_in_row == 0)
		return $class_prefix . '_first';
	
	if($counter % $num_in_row == $num_in_row - 1)
		return $class_prefix . '_last';
	
	return $class_prefix . '_middle';
}

/**
 * Removes width and height attributes from post_thumbnail function calls.
 * In a responsive design, we want to resize with CSS.
 *
 * @since CalPress 0.9.7
 * @param string $html Img tag html
 * @return string The filtered html without height and width attributes
 */
function calpress_remove_img_width_height_attributes($html){
	$html = preg_replace( '/(width|height)=\"\d*\"\s/', "", $html );
    return $html;
}

add_filter( 'post_thumbnail_html', 'calpress_remove_img_width_height_attributes', 10 );



/**
 * Get the YouTube ID from the query string of a URL using a fantastic
 * regex script that supports multiple types of YouTube URL formats.
 * http://stackoverflow.com/a/6382259/838158
 *
 * @since CalPress 0.9.7
 * @param string $url The YouTube URL
 * @return string|bool Just the YouTube ID, false on failure
 */
function calpress_get_youtube_id_from_url($url){
	//regex for every possible YouTube ID
	if (preg_match('%(?:youtube(?:-nocookie)?\.com/(?:[^/]+/.+/|(?:v|e(?:mbed)?)/|.*[?&]v=)|youtu\.be/)([^"&?/ ]{11})%i', $url, $match))
		return $match[1];
	
	return false;
}

/**
 * Get the Vimeo ID from the URL using this regex script that supports multiple types 
 * of Vimeo URL formats.
 *
 * @since CalPress 0.9.7
 * @param string $url The Vimeo URL
 * @return string|bool Just the Vimeo ID from a url, false on failure
 */
function calpress_get_vimeo_id_from_url($url){
	if(preg_match('/^(http|https):\/\/(www\.)?vimeo\.com\/(clip\:)?(\d+).*$/', $url, $match))
		return $match[4];
		
	return false;
}

/**
 * Using CURL to get headers instead of PHP get_headers
 * This allows us to set a timeout in case we can't connect
 *
 * @since CalPress 0.9.7
 * @param string $url The url of headers you want to retrieve
 * @param int $timeout The number of seconds to wait before giving up
 * @return array The headers returned. Will be empty if timed out.
 */
function calpress_get_headers_curl($url, $timeout=10) 
{ 
    $ch = curl_init(); 

    curl_setopt($ch, CURLOPT_URL,            $url); 
    curl_setopt($ch, CURLOPT_HEADER,         true); 
    curl_setopt($ch, CURLOPT_NOBODY,         true); 
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); 
    curl_setopt($ch, CURLOPT_TIMEOUT,        $timeout); 

    $r = curl_exec($ch); 
    $r = split("\n", $r); 
    return $r; 
}

/**
 * A custom comment counter for Posts. Excludes track/ping backs
 *
 * @since CalPress 0.7
 * @return string
 */
function calpress_get_comment_count(){
    global $wp_query;
    
    $comments = $wp_query->comments;
    $comment_count = 0;
    foreach ( $comments as $comment ) {
        if($comment->comment_type != "pingback" && $comment->comment_type != "trackback"){
            $comment_count++;
        }
    }
    
    return $comment_count;
}

/**
 * A function to change the behavior of WP's get_comment_count to exclude trackback and pingbacks
 *
 * @uses get_comments_number()
 * @return void
 */
function calpress_update_comment_count(){
    add_filter('get_comments_number', 'calpress_get_comment_count', 0);
}

/**
 * Sets the background color of the featured comment "staff pick" callout on comments and
 * the top bar near the top of the site.
 *
 * @return void
 */
function calpress_featured_comment_color(){
	$options =  unserialize(CALPRESSTHEMEOPTIONS);
	
	if($options['theme_color'])
	{
	echo '<style type="text/css" id="custom-background-css">
.comments li.comment.featured{ background-color:' . $options['theme_color'] . ' !important; } 
div#top-menu-bar{ border-bottom:5px solid ' . $options['theme_color'] . ';}
</style>'.PHP_EOL;
	}
}

add_action('wp_head', 'calpress_featured_comment_color');

/**
 * A custom callback for wp_list_comments, so we can 
 * customize commenter links/stats. see comments.php
 *
 * @since CalPress 0.7
 * @return string
 */
function calpress_custom_comments($comment, $args, $depth) {
   $GLOBALS['comment'] = $comment; 

   // get correct avatar type from Settings->Discussion
   $default = get_option('avatar_default');

   if ( empty($default) )
       $default = 'mystery';

   // get user-defined depth of contents from Settings->Discussion
   $comment_depth = get_option('thread_comments_depth');
   $threaded_comments_enabled = get_option('thread_comments');
   
   // We want commentor URLs to point to their WP profile, if possible
   // - Is the comment author registered on the site? the author of the post?
    $registered_user = false;
    $post_author = false;
    $staff_memeber = false;
   if ( $comment->user_id > 0 && $user = get_userdata($comment->user_id) ) {
       // get user info
       $registered_user = true;
       $user_info = get_userdata($comment->user_id);
       $post_author_link = get_author_posts_url( $comment->user_id ); 
       $post_author_name = $user_info->display_name;
       $post_author_registered_date = strtotime($user_info->user_registered);
       $commentauthorlink = "<a href=\"$post_author_link\">$post_author_name</a>";
       
       // is this registered user also the post author?
       if ( $post = get_post($post_id) ) {
			if ( $comment->user_id === $post->post_author )
				$post_author = true;
		}
		
		// is the registered user a staff member (editor level or above)?
		if ($user_info->user_level >= 7) {
		  $staff_memeber = true;
		}
       
   } else {
       $commentauthorlink = get_comment_author_link();
   }
   
   ?>
   <li <?php comment_class(); ?> id="li-comment-<?php comment_ID() ?>">
     <div id="comment-<?php comment_ID(); ?>">
      <div class="comment-author vcard">
         <?php echo get_avatar($comment,$size='32',$default); ?>
         <?php 
         if ($post_author){
             printf(__('<cite class="fn">%s</cite> <span class="member-status">Post author</span>'), $commentauthorlink);
         } elseif ($staff_memeber) {
             printf(__('<cite class="fn">%s</cite> <span class="member-status">Staff</span>'), $commentauthorlink);
         } elseif ($registered_user) {
             printf(__('<cite class="fn">%s</cite> <span class="member-status">Joined %s</span>'), $commentauthorlink, $post_author_registered_date);
         } else {
             printf(__('<cite class="fn">%s</cite>'), $commentauthorlink);  
         }
         ?>
      </div>
      <?php if ($comment->comment_approved == '0') : ?>
         <em><?php _e('Your comment is awaiting moderation.') ?></em>
         <br />
      <?php endif; ?>

      <div class="comment-meta commentmetadata"><a href="<?php echo esc_url( get_comment_link( $comment->comment_ID ) ) ?>"><?php printf(__('%1$s at %2$s'), get_comment_date(),  get_comment_time()) ?></a><?php edit_comment_link(__('(Edit)'),'  ','') ?></div>

      <?php comment_text() ?>

      <?php if ($comment_depth > $depth && $threaded_comments_enabled && comments_open()): ?>
          <div class="reply">
               <?php comment_reply_link(array_merge( $args, array('depth' => $depth, 'max_depth' => $args['max_depth']))) ?>
            </div>
      <?php endif ?>
     </div>
<?php
}

/**
 * Returns the comment policy as set in theme options
 *
 * @since CalPress 0.9.7
 * @return string returns the comment policy
 */
function calpress_comment_policy(){
	$options = unserialize(CALPRESSTHEMEOPTIONS);
	$default = '<p class="comment-notes">' . __( 'Your email is <em>never</em> shared. Required fields are marked *', 'Calpress' ) . '</p>';
	
	if($options['comment_policy'])
		return (string) '<p class="comment-notes">' . $options['comment_policy'] . '</p>' . $default;
		
	return $default;
}

/**
 * Build form field for comment_form function.
 * See: http://codex.wordpress.org/Function_Reference/comment_form
 *
 * @since CalPress 0.9.7
 * @return array To be used in the comment_form argument
 */
function calpress_comment_form_fields(){
	global $user_identity;

	$commenter = wp_get_current_commenter();
	$req = get_option( 'require_name_email' );
	$aria_req = ( $req ? ' required="required" ' : '' );//new html5 required attribute
	
	$fields = array(
		'author' => '<div class="form-label">' . 
						'<label for="author">' . __( 'Name', 'CalPress' ) . '</label> ' . ($req ? '<span class="required">*</span>' : '') .
					'</div>' .
					'<div class="form-input">' .
		            '<input id="author" name="author" type="text" value="' . esc_attr( $commenter['comment_author'] ) . '" size="30" maxlength="50" class="text' . ($req ? ' required' : '') .'"' . $aria_req . ' placeholder="Name" />' . 
					'</div>',
		'email'  => '<div class="form-label">' . 
						'<label for="email">' . __( 'Email', 'CalPress' ) . '</label> ' . ( $req ? '<span class="required">*</span>' : '' ) .
					'</div>' . 
					'<div class="form-input">' .
		            '<input id="email" name="email" type="email" value="' . esc_attr(  $commenter['comment_author_email'] ) . '" size="30" maxlength="50" class="text' . ($req ? ' required' : '') .'"' . $aria_req . ' placeholder="Email" />' . 
					'</div>',
		'url'    => '<div class="form-label">' . 
						'<label for="url">' . __( 'Website', 'CalPress' ) . '</label>' .
					'</div>' . 
					'<div class="form-input">' . 
		            	'<input id="url" name="url" type="url" class="text" value="' . esc_attr( $commenter['comment_author_url'] ) . '" size="30" maxlength="50" placeholder="Your website" />' . 
					'</div>'
	);
	
	$comments_args = array(
			'fields' => apply_filters( 'comment_form_default_fields', $fields),
	     
	        'comment_field' => '<div class="form-label"><label for="comment">'. _x( 'Comment', 'noun' ) .'</label></div>
			<div class="form-textarea"><textarea id="comment" name="comment" class="text required" cols="45" rows="8" required="required" placeholder="Type comment here."></textarea></div>',
	
			'must_log_in' => '<p id="login-req">' . sprintf(__('You must be <a href="%s" title="Log in">logged in</a> to post a comment.', 'CalPress'),
			wp_login_url(apply_filters( 'the_permalink', get_permalink( ) )) ) . '</p>', 
			
			'logged_in_as' => '<p id="login">' . sprintf( __( '<span class="loggedin">Logged in as <a href="%1$s" title="Logged in as %2$s">%2$s</a>.</span> <span class="logout"><a href="%3$s" title="Log out of this account">Log out?</a></span>', 'CalPress' ), admin_url( 'profile.php' ), esc_html( $user_identity, 1 ), wp_logout_url( apply_filters( 'the_permalink', get_permalink() ) ) )  . '</p>',
			
			'comment_notes_before' => calpress_comment_policy(),
			
			'comment_notes_after' => '',
			
			'id_form' => 'commentform', 
			
			'id_submit' => 'submit',
			
			'title_reply' => __( 'Post a comment', 'CalPress' ),
			
			'title_reply_to' => __( 'Post a reply to %s', 'CalPress' ),
			
			'cancel_reply_link' => __( 'Cancel this reply', 'CalPress' ),
			
			'label_submit' =>  __( 'Post Comment', 'CalPress' )
			
	);
		
	return $comments_args;
}


//temporarly log function for debugging
if(!function_exists('_log')){
  function _log( $message ) {
    if( WP_DEBUG === true ){
      if( is_array( $message ) || is_object( $message ) ){
        error_log( print_r( $message, true ) );
      } else {
        error_log( $message );
      }
    }
  }
}

?>